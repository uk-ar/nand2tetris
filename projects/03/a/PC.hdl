// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    //gen isload
    Or(a=reset,b=load,out=out1);
    Or(a=out1, b=inc, out=isload);
    //Not(in=out2,out=isload);
    Register(in=rin,out=prev,out=out,load=isload);
    //gen inco
    Inc16(in=prev,out=inco);

    Mux8Way16(sel[0]=inc,sel[1]=load,sel[2]=reset,out=rin,
    //Mux8Way16(sel[0]=reset,sel[1]=load,sel[2]=inc,out=rin,
    a=prev,
    b=inco,
    c=in,
    d=in,
    e=false,
    f=false,
    g=false,
    h=false
    );
    // Put your code here:
}
